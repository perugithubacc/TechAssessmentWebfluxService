openapi: 3.0.1
info:
  title: Product API
  version: 1.0.0
servers:
  - url: /api/v1
paths:
  /products/{productCode}:
    get:
      summary: Get products by product code
      operationId: getProductByProductCode
      parameters:
        - in: path
          name: productCode
          required: true
          schema:
            type: string
          description: The product code of the Products
      responses:
        '200':
          description: Product information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    put:
      summary: Update a product by product code
      operationId: updateProductByProductCode
      parameters:
        - in: path
          name: productCode
          required: true
          schema:
            type: string
          description: The product code of the Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    delete:
      summary: Delete a product by product code
      operationId: deleteProductByProductCode
      parameters:
        - in: path
          name: productCode
          required: true
          schema:
            type: string
          description: The product code of the Products
      responses:
        '204':
          description: Product deleted
        '404':
          description: Product not found
  /products:
    post:
      summary: Create a new product
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    get:
      summary: List all products
      operationId: listProducts
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/search:
    get:
      summary: Search products by field and value
      operationId: searchProducts
      parameters:
        - name: field
          in: query
          required: true
          schema:
            type: string
        - name: value
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Products matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
components:
  schemas:
    Product:
      type: object
      properties:
        productId:
          type: string
        productCode:
          type: string
        productName:
          type: string
        productDescription:
          type: string
        productPrice:
          type: number
          format: BigDecimal
        productQuantity:
          type: integer
        productType:
          type: string
